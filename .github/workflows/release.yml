name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: linux-armv7
          
          # macOS
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          
          # Windows
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: windows
            goarch: arm64
            suffix: windows-arm64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: |
          output_name="grpc-scan-${{ matrix.suffix }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            go build -ldflags="-s -w" -o "${output_name}" .
          else
            go build -ldflags="-s -w" -o "${output_name}" .
          fi
          
          # Create archive
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "${output_name}.zip" "${output_name}" README.md LICENSE data/
          else
            tar czf "${output_name}.tar.gz" "${output_name}" README.md LICENSE data/
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            grpc-scan-${{ matrix.suffix }}.tar.gz
            grpc-scan-${{ matrix.suffix }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
